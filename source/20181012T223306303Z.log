2018-10-12T22:33:06.873Z text_insertion_keyboard_shortcut:TextInsertionKeyboardShortcut:text_insertion_keyboard_shortcut.js:main:debug: ChildProcess {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  _closesNeeded: 3,
  _closesGot: 0,
  connected: false,
  signalCode: null,
  exitCode: null,
  killed: false,
  spawnfile:
   '/Users/cameron/dev/TextInsertionKeyboardShortcuts/node/npm/node_modules/electron/dist/Electron.app/Contents/MacOS/Electron',
  _handle:
   Process {
     onexit: { [Function] [length]: 2, [name]: '' },
     pid: 55452,
     [Symbol(owner)]: [Circular] },
  spawnargs:
   [ '/Users/cameron/dev/TextInsertionKeyboardShortcuts/node/npm/node_modules/electron/dist/Electron.app/Contents/MacOS/Electron',
     [length]: 1 ],
  pid: 55452,
  stdin:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      Pipe {
        onread:
         { [Function: onStreamRead]
           [length]: 2,
           [name]: 'onStreamRead',
           [prototype]: onStreamRead { [constructor]: [Circular] } },
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     _events:
      { end:
         { [Function: onReadableStreamEnd]
           [length]: 0,
           [name]: 'onReadableStreamEnd',
           [prototype]: onReadableStreamEnd { [constructor]: [Circular] } } },
     _eventsCount: 1,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite:
         { [Function: bound onwrite] [length]: 1, [name]: 'bound onwrite' },
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree:
         { next: null,
           entry: null,
           finish:
            { [Function: bound onCorkedFinish] [length]: 1, [name]: 'bound onCorkedFinish' } } },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     [Symbol(asyncId)]: 6,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  stdout:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      Pipe {
        onread:
         { [Function: onStreamRead]
           [length]: 2,
           [name]: 'onStreamRead',
           [prototype]: onStreamRead { [constructor]: [Circular] } },
        reading: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end:
         { [Function: onReadableStreamEnd]
           [length]: 0,
           [name]: 'onReadableStreamEnd',
           [prototype]: onReadableStreamEnd { [constructor]: [Circular] } },
        close: { [Function] [length]: 0, [name]: '' } },
     _eventsCount: 2,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite:
         { [Function: bound onwrite] [length]: 1, [name]: 'bound onwrite' },
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree:
         { next: null,
           entry: null,
           finish:
            { [Function: bound onCorkedFinish] [length]: 1, [name]: 'bound onCorkedFinish' } } },
     writable: false,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     [Symbol(asyncId)]: 7,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  stderr:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      Pipe {
        onread:
         { [Function: onStreamRead]
           [length]: 2,
           [name]: 'onStreamRead',
           [prototype]: onStreamRead { [constructor]: [Circular] } },
        reading: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end:
         { [Function: onReadableStreamEnd]
           [length]: 0,
           [name]: 'onReadableStreamEnd',
           [prototype]: onReadableStreamEnd { [constructor]: [Circular] } },
        close: { [Function] [length]: 0, [name]: '' } },
     _eventsCount: 2,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite:
         { [Function: bound onwrite] [length]: 1, [name]: 'bound onwrite' },
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree:
         { next: null,
           entry: null,
           finish:
            { [Function: bound onCorkedFinish] [length]: 1, [name]: 'bound onCorkedFinish' } } },
     writable: false,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     [Symbol(asyncId)]: 8,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  stdio:
   [ Socket {
       connecting: false,
       _hadError: false,
       _handle:
        Pipe {
          onread:
           { [Function: onStreamRead]
             [length]: 2,
             [name]: 'onStreamRead',
             [prototype]: [onStreamRead] },
          [Symbol(owner)]: [Circular] },
       _parent: null,
       _host: null,
       _readableState:
        ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: null,
          pipesCount: 0,
          flowing: null,
          ended: false,
          endEmitted: false,
          reading: false,
          sync: true,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          emitClose: false,
          destroyed: false,
          defaultEncoding: 'utf8',
          awaitDrain: 0,
          readingMore: false,
          decoder: null,
          encoding: null },
       readable: false,
       _events:
        { end:
           { [Function: onReadableStreamEnd]
             [length]: 0,
             [name]: 'onReadableStreamEnd',
             [prototype]: [onReadableStreamEnd] } },
       _eventsCount: 1,
       _maxListeners: undefined,
       _writableState:
        WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite:
           { [Function: bound onwrite] [length]: 1, [name]: 'bound onwrite' },
          writecb: null,
          writelen: 0,
          bufferedRequest: null,
          lastBufferedRequest: null,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          bufferedRequestCount: 0,
          corkedRequestsFree: { next: null, entry: null, finish: [Function] } },
       writable: true,
       allowHalfOpen: false,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: null,
       _server: null,
       [Symbol(asyncId)]: 6,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]: null,
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0 },
     Socket {
       connecting: false,
       _hadError: false,
       _handle:
        Pipe {
          onread:
           { [Function: onStreamRead]
             [length]: 2,
             [name]: 'onStreamRead',
             [prototype]: [onStreamRead] },
          reading: true,
          [Symbol(owner)]: [Circular] },
       _parent: null,
       _host: null,
       _readableState:
        ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: null,
          pipesCount: 0,
          flowing: null,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          emitClose: false,
          destroyed: false,
          defaultEncoding: 'utf8',
          awaitDrain: 0,
          readingMore: false,
          decoder: null,
          encoding: null },
       readable: true,
       _events:
        { end:
           { [Function: onReadableStreamEnd]
             [length]: 0,
             [name]: 'onReadableStreamEnd',
             [prototype]: [onReadableStreamEnd] },
          close: { [Function] [length]: 0, [name]: '' } },
       _eventsCount: 2,
       _maxListeners: undefined,
       _writableState:
        WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite:
           { [Function: bound onwrite] [length]: 1, [name]: 'bound onwrite' },
          writecb: null,
          writelen: 0,
          bufferedRequest: null,
          lastBufferedRequest: null,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          bufferedRequestCount: 0,
          corkedRequestsFree: { next: null, entry: null, finish: [Function] } },
       writable: false,
       allowHalfOpen: false,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: null,
       _server: null,
       [Symbol(asyncId)]: 7,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]: null,
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0 },
     Socket {
       connecting: false,
       _hadError: false,
       _handle:
        Pipe {
          onread:
           { [Function: onStreamRead]
             [length]: 2,
             [name]: 'onStreamRead',
             [prototype]: [onStreamRead] },
          reading: true,
          [Symbol(owner)]: [Circular] },
       _parent: null,
       _host: null,
       _readableState:
        ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: null,
          pipesCount: 0,
          flowing: null,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          emitClose: false,
          destroyed: false,
          defaultEncoding: 'utf8',
          awaitDrain: 0,
          readingMore: false,
          decoder: null,
          encoding: null },
       readable: true,
       _events:
        { end:
           { [Function: onReadableStreamEnd]
             [length]: 0,
             [name]: 'onReadableStreamEnd',
             [prototype]: [onReadableStreamEnd] },
          close: { [Function] [length]: 0, [name]: '' } },
       _eventsCount: 2,
       _maxListeners: undefined,
       _writableState:
        WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite:
           { [Function: bound onwrite] [length]: 1, [name]: 'bound onwrite' },
          writecb: null,
          writelen: 0,
          bufferedRequest: null,
          lastBufferedRequest: null,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          bufferedRequestCount: 0,
          corkedRequestsFree: { next: null, entry: null, finish: [Function] } },
       writable: false,
       allowHalfOpen: false,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: null,
       _server: null,
       [Symbol(asyncId)]: 8,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]: null,
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0 },
     [length]: 3 ] }
